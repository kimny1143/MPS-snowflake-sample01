[tool.poetry]
name = "mps-snowflake-sample01"
version = "0.1.0"
description = "MUED Snowflake AI App - RSS feed ingestion with LLM enrichment"
authors = ["Your Name <you@example.com>"]
readme = "README.md"
packages = [{include = "src"}, {include = "api"}, {include = "app"}]

[tool.poetry.dependencies]
python = ">=3.12,<3.13"
snowflake-connector-python = "^3.15.0"
snowflake-snowpark-python = "^1.33.0"
snowflake-ml-python = "^1.0.0"
feedparser = "^6.0.11"
streamlit = "^1.41.1"
fastapi = "^0.100.0"
uvicorn = {extras = ["standard"], version = "^0.23.0"}
pydantic = "^2.10.4"
python-dotenv = "^1.0.1"
pandas = "^2.2.3"
numpy = "^1.26.4"
pyarrow = "^18.1.0"
html2text = "^2024.2.26"
plotly = "^5.24.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
ruff = "^0.1.0"
black = "^23.0.0"
pre-commit = "^3.5.0"

[tool.ruff]
line-length = 88
target-version = "py312"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
]

[tool.black]
line-length = 88
target-version = ['py312']

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "-v"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
